server.port=8080
debug=false

spring.main.allow-bean-definition-overriding=true

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://localhost:5432/collaboux
spring.datasource.username=
spring.datasource.password=

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#security.oauth2.resource.filter-order=3


collaboux.oauth2.private-key=
collaboux.oauth2.public-key=

spring.security.oauth2.client.registration.google.clientId=
spring.security.oauth2.client.registration.google.clientSecret=
spring.security.oauth2.client.registration.google.redirectUri= http://local.collaboux.com:8080/oauth2/callback/google
spring.security.oauth2.client.registration.google.scope=email,profile

spring.security.oauth2.client.registration.facebook.clientId=
spring.security.oauth2.client.registration.facebook.clientSecret=
spring.security.oauth2.client.registration.facebook.redirectUri=http://local.collaboux.com:8080/oauth2/callback/facebook
  # Note that facebook now mandates the use of https redirect URIs, so make sure your app supports https in production
spring.security.oauth2.client.registration.facebook.scope=email,public_profile

app.oauth2.authorizedRedirectUris=http://local.collaboux.com:4200,http://local.collaboux.com:8080/oauth2/callback/facebook,http://local.collaboux.com:8080/oauth2/callback/google

app.auth.tokenSecret=collaboux

app.auth.tokenExpirationMsec=360000000


#http://local.collaboux.com:8080/oauth2/authorize/google?redirect_uri=http://local.collaboux.com:8080/oauth2/callback/google